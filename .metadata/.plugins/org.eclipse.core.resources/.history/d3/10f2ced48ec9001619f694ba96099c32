package com.cb.practice;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Required;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

@Controller
public class Circle implements Shape {

	@Autowired
	private MessageSource messageSource;
	
	public MessageSource getMessageSource() {
		return messageSource;
	}
	public void setMessageSource(MessageSource messageSource) {
		this.messageSource = messageSource;
	}
	
	@Autowired
	private Point center;
	@Override
	public void draw() {
		    
		System.out.println(this.messageSource.getMessage("Center.point", new Object[] {center.getX(), center.getY()}, "There is no point", null));
		
		System.out.println(this.messageSource.getMessage("Draw", null, "There is nothig to draw", null));
		
	}
	public Point getCenter() {
		return center;
	}
	
	
	
	public void setCenter(Point center) {
		this.center = center;
	}

	@PostConstruct
	public void myInit() {
		System.out.println("@PostConstruct myInit() menthod");
	}
		
	@PreDestroy	
	public void myDestroy() {
		System.out.println("@PreDestroy myDestroy() menthod");
	}
	
}
