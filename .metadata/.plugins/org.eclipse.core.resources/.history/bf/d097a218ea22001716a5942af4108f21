package com.cb;


import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class UnitExercise {

	public static void main(String[] args) {
	
		List<Person> people = Arrays.asList(new Person("Charles", "Dicken", 60), 
											new Person("Lewis", "Carrol", 42), 
											new Person("Thomas", "Carlyle", 51), 
											new Person("Charlotte", "Bronte", 45), 
											new Person("Mathew", "Arnold", 39));
		/*for(Person p: people)
			System.out.println(p.getfName()+" "+p.getlName()+" "+p.getAge());
		System.out.println("\n\n\n\n");*/
		
		//Step 1: Sort list by last name
		
		SortList sortList = l -> {
			
			Collections.sort(l, (p1, p2) -> p1.getlName().compareToIgnoreCase(p2.getlName()));
		
			
		/*	Collections.sort(l, new Comparator<Person>() {

				@Override
				public int compare(Person o1, Person o2) {
					
					return o1.getlName().compareToIgnoreCase(o2.getlName());
				}				
			});*/
			
			return l;
						
		};
		
		//Step 2: Print the sorted list
		PrintList printList = l -> {
			for(Person p: l)
				System.out.println(p.getfName()+" "+p.getlName()+" "+p.getAge());
		};		
		
		
		//Step 3: Create a method that prints all people that have last name starts with 'c'
		PrintList names = l -> {
			for(Person p: l) {
				if(p.getlName().startsWith("C"))
					System.out.println(p.getlName());
			}
		};
		
		
		
		
		printList.print(sortList.sort(people));
		System.out.println("\n");
		names.print(people);
		
	}
}

interface SortList {

	public List<Person> sort(List<Person> l);
}


interface PrintList {
	public void print(List<Person> l);
}

interface NamesWithC {
	public void printNamesWithC(List<Person> l);
}